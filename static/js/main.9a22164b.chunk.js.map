{"version":3,"sources":["components/NavigationComponent/NavigationComponent.js","components/GithubIssue/GithubIssue.js","components/GithubIssues/GithubIssues.js","views/LandingPage/LandingPage.js","views/AboutPage/AboutPage.js","views/ContactPage/ContactPage.js","views/PostPage/PostPage.js","index.js","views/AuthorPage/AuthorPage.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","navHeader","margin","width","subtitle","fontSize","maxWidth","NavigationComponent","pages","classes","React","useState","left","state","setState","toggleDrawer","anchor","open","event","type","key","defaultHandler","Fragment","Toolbar","IconButton","onClick","edge","className","color","aria-label","Typography","variant","Button","Drawer","onClose","Divider","List","map","page","idx","ListItem","button","name","clickHandler","ListItemIcon","icon","ListItemText","primary","text","ParagraphComponent","props","children","GithubIssue","issue_id","issue","number","body","labels","created_at","previousState","nextState","date","d","Date","month","getMonth","getDay","getFullYear","join","this","renderers","paragraph","bodyArray","split","filter","x","trim","length","Card","card","CardContent","root","Grid","container","item","xs","label","console","log","Chip","chip","size","style","borderColor","displaye","align","formatDate","display","source","href","Component","withStyles","paper","marginTop","marginBottom","GithubIssues","user","repo","listFilter","choice","since","now","toISOString","per_page","sort","issues","loading","error","showBody","getIssues","bind","handleRepoChange","handlePageChange","obj","params","Object","entries","kv","encodeURIComponent","linkHeaders","userRepoIssues","fullUrl","fetch","headers","Authorization","Accept","then","response","get","parseLinkHeader","ok","json","Error","data","catch","Array","keys","Skeleton","animation","height","message","value","renderError","index","renderLoading","renderIssues","Pagination","count","Math","ceil","onChange","showFirstButton","showLastButton","padding","flexGrox","jumbotron","zIndex","backgroundColor","main","background","position","mainRaised","borderRadius","boxShadow","CodeComponent","Paper","elevation","border","undefined","overflow","language","Post","loaded","getIssue","match","id","userRepoIssue","code","Container","withRouter","hist","createBrowserHistory","pagesConfig","push","ReactDOM","render","history","exact","path","component","PostPage","document","getElementById"],"mappings":"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","file":"static/js/main.9a22164b.chunk.js","sourcesContent":["import React from 'react'\nimport { Drawer, Divider, ListItem, ListItemIcon, Button, Typography, Toolbar, IconButton, List, ListItemText } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    navHeader: {\n        margin:\"20px\",\n        width: \"400px\"\n    },\n    subtitle: {\n        fontSize: \"1.313rem\",\n        maxWidth: \"500px\",\n        margin: \"10px auto 0\"\n    }\n}));\n\nexport default function NavigationComponent({ pages }) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n    const toggleDrawer = (anchor, open) => (event) => {\n        if(event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({ ...state, [anchor]: open});\n    };\n\n    const defaultHandler = () => {}; //No-Op\n\n    return (\n        <React.Fragment>\n            <Toolbar>\n                <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    The Pragmatic Programmer\n                </Typography>\n                <Button color=\"inherit\">Login</Button>\n            </Toolbar>\n            <Drawer anchor='left' open={state['left']} onClose={toggleDrawer('left', false)}>\n                <Typography className={classes.navHeader} variant=\"h6\">The Pragmatic Developer</Typography>\n                <Divider />\n                <List>\n                    {pages.map((page, idx) => (\n                        <ListItem button key={page.name} onClick={page.clickHandler || defaultHandler}>\n                            <ListItemIcon>\n                              {page.icon || <ChevronRightIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={page.text || page.name} />\n                        </ListItem>\n                    ))};\n                </List>\n            </Drawer>\n        </React.Fragment>\n    );\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Typography, Divider, Button, Grid, Chip } from '@material-ui/core'\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: theme.spacing(0.5)\n  },\n  chip: {\n      margin: theme.spacing(0.5)\n  },\n    card: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n});\n\nfunction ParagraphComponent(props) {\n    return (\n        <Typography variant=\"body1\">{props.children}</Typography>\n    );\n}\n\nclass GithubIssue extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            issue_id: this.props.issue.number,\n            title: this.props.issue.title,\n            body: this.props.issue.body,\n            labels: this.props.issue.labels,\n            created_at: this.props.issue.created_at\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    shouldComponentUpdate(previousState, nextState) {\n        return previousState.title !== nextState.title;\n    }\n\n    formatDate(date) {\n        let d = new Date(date),\n            month = \"\" + (d.getMonth() + 1),\n            day = \"\" + (d.getDay()),\n            year = \"\" + (d.getFullYear());\n        return [day, month, year].join('/');\n    }\n\n    render() {\n        const { classes } = this.props;\n        const renderers = {\n            paragraph: ParagraphComponent\n        }\n        let bodyArray = this.state.body.split(\"\\n\").filter(x => x.trim().length !== 0);\n        return (\n            <Card variant=\"outlined\" className={classes.card}>\n                <CardContent className={classes.root}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={9}>\n                        {\n                            this.state.labels.map( (label, idx) => {\n                                console.log(label.color)\n                                return (<Chip key={idx} className={classes.chip} label={label.name} size=\"small\" variant=\"outlined\" style={{color:\"#\" + label.color, borderColor: \"#\" + label.color}} />);\n                            })\n                        }\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Typography variant=\"subtitle1\" displaye=\"block\" align=\"right\">{this.formatDate(this.state.created_at)}</Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography variant=\"h4\" display=\"block\">{this.state.title}</Typography>\n                    <ReactMarkdown source={bodyArray[0] || \"\"} renderers={renderers}/>\n                    <Divider />\n                    <Button variant=\"contained\" color=\"primary\" href={`/post/${this.state.issue_id}`}>View</Button>\n                </CardContent>\n            </Card>\n            );\n    }\n}\n\nexport default withStyles(styles)(GithubIssue);\n","import React from 'react';\nimport parseLinkHeader from 'parse-link-header'\nimport GithubIssue from 'components/GithubIssue/GithubIssue'\nimport { Pagination, Skeleton } from '@material-ui/lab'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Grid, Typography, Divider, Button } from '@material-ui/core'\n\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: theme.spacing(0.5)\n  },\n  chip: {\n      margin: theme.spacing(0.5)\n  },\n    card: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n});\n\n\nconst encodeParameters = (obj) => {\n    return Object.entries(obj).map(kv => kv.map(encodeURIComponent).join('=')).join('&')\n}\n\n\n/**\n *\n *\n * @class GithubIssues\n * @extends {React.Component}\n */\nclass GithubIssues extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user,\n            repo: this.props.repo,\n            listFilter: { state: \"open\", choice: \"issues\" },\n            since: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n            per_page: this.props.per_page || 2,\n            number: 0,\n            sort: \"created\",\n            page: 1,\n            pages: {},\n            issues: [],\n            loading: true,\n            error: null,\n            showBody: {},\n        };\n\n        // fix the this value\n        this.getIssues = this.getIssues.bind(this);\n        this.handleRepoChange = this.handleRepoChange.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        //this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    }\n\n    componentDidMount() {\n         // Get the issues and populate the panel\n        this.getIssues();\n    }\n\n\n    shouldComponentUpdate(previousState, nextState) {\n        if (previousState.page !== nextState.page) {\n            return true;\n        }\n        if (previousState.listFilter !== nextState.listFilter) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Fetch issues for repository\n     */\n    getIssues() {\n\n        // Use auth token with Github API in order to have a higher rate limit for this example - not recommended for client-side use in production\n        const headers = {\n            headers: {\n                Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n                Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n            }\n        };\n\n        const baseUrl = \"https://api.github.com/repos\"\n\n        // 7 days ago from today in ISO - to be used for GH API parameter\n        // included as a state variable because I will add a datepicker in the future for custom time frame\n\n        // GET parameters to send to GH Issues API\n        // `this.state.listFilter.state` - this is ~confusing because GH refers to\n        // 'open, closed' as 'state' of an issue/PR\n        // I am calling open/close/all 'state' and issue/pr/all 'choice'\n        const params = encodeParameters({ state: this.state.listFilter.state, per_page: this.state.per_page, page: this.state.page, sort: \"created\" })\n\n        // Need an empty string to store Link headers from GET response since we need to reference it within promise chain - used for pagination\n        let linkHeaders = ''\n\n        // Build the URL from props/state(for the page) - [note: when state.page changes, we update]\n        let userRepoIssues = `${this.state.user}/${this.state.repo}/issues`\n\n        let fullUrl = `${baseUrl}/${userRepoIssues}?${params}`\n        console.log(fullUrl)\n        fetch(fullUrl, headers)\n            .then(response => {\n                // If we have Link headers, parse them in to an object to store via appHelpers.parseLinkHeaders\n                if (response.headers.get('Link')) {\n                    linkHeaders = parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                // set our state with the response\n                this.setState({\n                    pages: linkHeaders,\n                    issues: data,\n                    number: this.state.number || data[0].number,\n                    loading: false,\n                    error: null,\n                    showBody: {},\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false,\n                    error: error\n                });\n            });\n    }\n\n    // Render a loading bar during HTTP Request\n    renderLoading() {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    [...Array(this.state.per_page).keys()].map((x) => {\n                        return (\n                            <Card key={x} variant=\"outlined\" className={classes.card}>\n                                <CardContent className={classes.root}>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={9}>\n\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            <Typography variant=\"subtitle1\" displaye=\"block\" align=\"right\"><Skeleton animation=\"wave\"/></Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Typography variant=\"h4\" display=\"block\"><Skeleton animation=\"wave\" width={240} /></Typography>\n                                    <Typography variant=\"body1\" display=\"block\"><Skeleton animation=\"wave\" /></Typography>\n                                    <Typography variant=\"body1\" display=\"block\"><Skeleton animation=\"wave\" /></Typography>\n                                    <Typography variant=\"body1\" display=\"block\"><Skeleton animation=\"wave\" width={84}/></Typography>\n                                    <Divider />\n                                    <Skeleton animation=\"wave\" width={64} height={44}/>\n                                </CardContent>\n                            </Card>\n                        );\n                    })\n                }\n            </React.Fragment>\n        );\n    }\n\n    // Render an error message\n    renderError() {\n        return (\n            <div>\n                Uh oh: {this.state.error.message}\n            </div>\n        );\n    }\n\n\n     // expects a URL parameter like the end of pagination url - i.e '&page=2'\n    handlePageChange(event, value) {\n        this.setState({page: value, loading: true}, () => {\n            this.getIssues()\n        })\n    }\n\n    // Handles interaction with the repository switcher in the header element\n    handleRepoChange(user, repo) {\n        /*this.setState(changeRepo(user, repo), () => {\n            this.getIssues()\n        })*/\n    }\n\n    // Renders the panel blocks that contain the issue information\n    renderIssues() {\n        if (this.state.error) {\n            return this.renderError();\n        }\n        console.log(this.state.issues)\n\n        return (\n            < React.Fragment >\n                {\n                    this.state.issues.map(function (data, index) {\n                        return (<GithubIssue key={index} issue={data}></GithubIssue>)\n                    })\n                }\n\n            </ React.Fragment>\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.loading ?\n                this.renderLoading()\n                : this.renderIssues()}\n                <Pagination style={{\n                    margin: 'auto',\n                    flexGrow: 1,\n                    maxWidth: 500\n                }}  count={Math.ceil(this.state.number / this.state.per_page)} page={this.state.page} onChange={this.handlePageChange} showFirstButton showLastButton />\n\n            </React.Fragment>\n        );\n    }\n}\nexport default withStyles(styles)(GithubIssues);\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { Container, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport GithubIssues from \"components/GithubIssues/GithubIssues\";\n\n// @material-ui/icons\n\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrox: \"1\"\n    },\n    jumbotron: {\n      display: \"block\",\n      width: \"100%\",\n      height: \"300px\",\n      zIndex: \"-1\",\n      backgroundColor: \"#222222\"\n    },\n    main: {\n      background: \"#FFFFFF\",\n      position: \"relative\",\n      zIndex: \"3\"\n    },\n    mainRaised: {\n      margin: \"-60px 30px 0px\",\n      borderRadius: \"6px\",\n      boxShadow:\n        \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n})\n\n\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Container>\n            <GithubIssues user=\"Heavyhat\" repo=\"the-pragmatic-developer\" />\n        </Container>\n      </div>\n  );\n}\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { Container, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport GithubIssues from \"components/GithubIssues/GithubIssues\";\n\n// @material-ui/icons\n\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrox: \"1\"\n    },\n    jumbotron: {\n      display: \"block\",\n      width: \"100%\",\n      height: \"300px\",\n      zIndex: \"-1\",\n      backgroundColor: \"#222222\"\n    },\n    main: {\n      background: \"#FFFFFF\",\n      position: \"relative\",\n      zIndex: \"3\"\n    },\n    mainRaised: {\n      margin: \"-60px 30px 0px\",\n      borderRadius: \"6px\",\n      boxShadow:\n        \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n})\n\n\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Container>\n            <GithubIssues user=\"Heavyhat\" repo=\"the-pragmatic-developer\" />\n        </Container>\n      </div>\n  );\n}\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { Container, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport GithubIssues from \"components/GithubIssues/GithubIssues\";\n\n// @material-ui/icons\n\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrox: \"1\"\n    },\n    jumbotron: {\n      display: \"block\",\n      width: \"100%\",\n      height: \"300px\",\n      zIndex: \"-1\",\n      backgroundColor: \"#222222\"\n    },\n    main: {\n      background: \"#FFFFFF\",\n      position: \"relative\",\n      zIndex: \"3\"\n    },\n    mainRaised: {\n      margin: \"-60px 30px 0px\",\n      borderRadius: \"6px\",\n      boxShadow:\n        \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n})\n\n\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Container>\n            <GithubIssues user=\"Heavyhat\" repo=\"the-pragmatic-developer\" />\n        </Container>\n      </div>\n  );\n}\n","import React from \"react\";\n// @material-ui/core components\nimport { Container, Typography, Grid, Paper, Chip } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router'\nimport ReactMarkdown from 'react-markdown'\nimport parseLinkHeader from 'parse-link-header'\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: theme.spacing(0.5)\n  },\n  chip: {\n      margin: theme.spacing(0.5)\n  },\n    card: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n});\n\nfunction ParagraphComponent(props) {\n    return (\n        <Typography variant=\"body1\">{props.children}</Typography>\n    );\n}\n\nfunction CodeComponent(props) {\n    return (\n        <Paper style={{margin:20, padding:20}} variant=\"outlined\" elevation={2} >\n            <pre className=\"prettyprint\" style={{border: undefined, overflow: \"auto\"}}>\n                <code className={props.language ? `language-${props.language}`: \"\"}>{props.value}</code>\n            </pre>\n        </Paper>\n    );\n}\n\nclass Post extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            issue_id: this.props.issue_id,\n            title: this.props.title,\n            body: this.props.body,\n            labels: this.props.labels || [],\n            created_at: this.props.created_at,\n            loaded: this.props.title && this.props.body && this.props.created_at\n        }\n        this.getIssue = this.getIssue.bind(this);\n    }\n\n    componentDidMount() {\n        if(!this.state.loaded) {\n            let issue_id = this.props.match.params.id;\n            this.setState({ issue_id: issue_id}, () => (\n                this.getIssue()\n            ))\n        }\n    }\n\n    getIssue() {\n        const headers = {\n            headers: {\n                Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n                Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n            }\n        };\n        const baseUrl = \"https://api.github.com/repos\"\n        let linkHeaders = ''\n        let userRepoIssue = `Heavyhat/the-pragmatic-developer/issues/${this.state.issue_id}`\n        let fullUrl = `${baseUrl}/${userRepoIssue}`\n        console.log(fullUrl)\n        fetch(fullUrl, headers)\n            .then(response => {\n                if (response.headers.get('Link')) {\n                    linkHeaders = parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                // set our state with the response\n                this.setState({\n                    title: data.title,\n                    body: data.body,\n                    labels: data.labels,\n                    created_at: data.created_at,\n                    loaded: true\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loaded: true,\n                    error: error\n                });\n            });\n    }\n\n    formatDate(date) {\n        let d = new Date(date),\n            month = \"\" + (d.getMonth() + 1),\n            day = \"\" + (d.getDay()),\n            year = \"\" + (d.getFullYear());\n        return [day, month, year].join('/');\n    }\n\n    render() {\n        const { classes } = this.props;\n        const renderers = {\n            paragraph: ParagraphComponent,\n            code: CodeComponent\n        }\n        return (\n            <Container style={{marginTop:120}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={9}>\n                            <Typography variant=\"h4\">{this.state.title}</Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Typography variant=\"subtitle1\">{this.state.created_at}</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                        {\n                            this.state.labels.map( (label, idx) => {\n                                console.log(label.color)\n                                return (<Chip key={idx} className={classes.chip} label={label.name} size=\"small\" variant=\"outlined\" style={{color:\"#\" + label.color, borderColor: \"#\" + label.color}} />);\n                            })\n                        }\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ReactMarkdown source={this.state.body} renderers={renderers}></ReactMarkdown>\n                        </Grid>\n                    </Grid>\n                </Container>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(Post));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom'\nimport NavigationComponent from 'components/NavigationComponent/NavigationComponent.js'\n\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport AboutPage from \"./views/AboutPage/AboutPage.js\";\nimport AuthorPage from \"./views/AuthorPage/AuthorPage.js\";\nimport ContactPage from \"./views/ContactPage/ContactPage.js\";\nimport PostPage from \"./views/PostPage/PostPage.js\";\n\nvar hist = createBrowserHistory();\n\nconst goToWeekly = () => {\n  hist.push(\"/\")\n};\nconst goToAbout = () => {\n  hist.push(\"/about\");\n};\nconst goToAuthor = () => {\n  console.log(\"goind to author\")\n  hist.push(\"/author\");\n};\nconst goToContact = () => {\n  hist.push(\"/contact\");\n};\nconst pagesConfig= [\n    { name: \"Weekly\", clickHandler: goToWeekly },\n    { name: \"About\", clickHandler: goToAbout },\n    { name: \"The Author\", clickHandler: goToAuthor },\n    { name: \"Contact\", clickHandler: goToContact}\n];\n\nReactDOM.render(\n  <React.Fragment>\n    <NavigationComponent pages={pagesConfig} />\n    <Router history={hist}>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/author\" component={AuthorPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/contact\" component={ContactPage} />\n          <Route path=\"/post/:id\" component={PostPage} />\n      </Switch>\n    </Router>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n","import React from \"react\";\n// nodejs library that concatenates classes\n// @material-ui/core components\nimport { Container, Typography, Card, CardContent, Divider, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\n// @material-ui/icons\n\n\n\n\n\nexport default function AuthorPage(props) {\n  return (\n      <div >\n        <Container>\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h2\">The Author</Typography>\n                    <Divider />\n                    <Grid container spacing={4}>\n                        <Grid item xs={8}>\n                            <Typography>Hi! My name is Josh.\n\n                                Thanks for having a look around and let me know if theres anything in partiocular you would like to see in the future.\n\n                            I have been working in the software development industry for {new Date().getFullYear() - 2015} years, working primarily in the financial services sector. This sector typically comes with a poor reputation and its own unique challenges which I love to see and solve. Having worked at a number of different firms I have observed a number of styfling issues which keep repeating themselves across the world. So I thought I would write about it! I'm not aiming to change much or to educate anyone but I hope to understand these issues in a more granular detail by articulating their intricacies into a blog like format.\n\n                                I don't identify as part of a particular sect of software development as In think these boundaries are detrimental to the profession as a whole. So throughout my brief career I have immessered myself in a number of langueges, techniques and sub fields which I hope I can draw from in the future.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Container>\n      </div>\n  );\n}\n"],"sourceRoot":""}