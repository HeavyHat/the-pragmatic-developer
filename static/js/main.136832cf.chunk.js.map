{"version":3,"sources":["components/NavigationComponent/NavigationComponent.js","components/GithubIssue/GithubIssue.js","components/Post/Post.js","components/GithubIssues/GithubIssues.js","views/LandingPage/LandingPage.js","views/AboutPage/AboutPage.js","views/AuthorPage/AuthorPage.js","views/ContactPage/ContactPage.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","navHeader","margin","width","subtitle","fontSize","maxWidth","NavigationComponent","pages","classes","React","useState","left","state","setState","toggleDrawer","anchor","open","event","type","key","defaultHandler","Fragment","AppBar","position","Toolbar","IconButton","onClick","edge","className","color","aria-label","Typography","variant","Drawer","onClose","Divider","List","map","page","idx","ListItem","button","name","clickHandler","ListItemIcon","icon","ListItemText","primary","text","ParagraphComponent","props","children","GithubIssue","issue_id","issue","number","body","labels","created_at","previousState","nextState","date","d","Date","month","getMonth","getDay","getFullYear","join","this","renderers","paragraph","bodyArray","split","filter","x","trim","length","Card","card","CardContent","root","Grid","container","item","xs","label","console","log","Chip","chip","size","style","borderColor","md","display","displaye","align","formatDate","source","Button","Component","withStyles","paper","marginTop","marginBottom","HeadingComponent","Box","m","component","ListComponent","ListItemComponent","imgComponent","alignItems","justify","sm","Paper","square","elevation","minWidth","padding","BreakComponent","CodeComponent","borderWidth","overflow","language","value","Post","loaded","getIssue","bind","match","params","id","userRepoIssue","fullUrl","fetch","headers","Authorization","Accept","then","response","get","parseLinkHeader","ok","json","Error","data","catch","error","code","heading","break","list","listItem","image","imageReference","config","url","window","location","href","identifier","Container","DiscussionEmbed","shortname","withRouter","getRand","min","max","range","Math","floor","random","GithubIssues","history","user","repo","listFilter","choice","since","now","toISOString","per_page","sort","issues","loading","showBody","loadedPost","getIssues","loadPost","renderPost","renderIssues","handlePageChange","obj","baseUrl","Object","entries","kv","encodeURIComponent","linkHeaders","userRepo","userRepoIssues","open_issues_count","Array","keys","Skeleton","animation","height","message","pathname","includes","push","renderError","index","Pagination","count","ceil","onChange","showFirstButton","showLastButton","renderLoading","flexGrox","jumbotron","zIndex","backgroundColor","main","background","mainRaised","borderRadius","boxShadow","LandingPage","styles","hist","createBrowserHistory","pagesConfig","ReactDOM","render","exact","path","lg","paragrapgh","document","getElementById"],"mappings":"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","file":"static/js/main.136832cf.chunk.js","sourcesContent":["import React from 'react'\nimport { Drawer, Divider, ListItem, ListItemIcon, AppBar, Typography, Toolbar, IconButton, List, ListItemText } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    navHeader: {\n        margin:\"20px\",\n        width: \"400px\"\n    },\n    subtitle: {\n        fontSize: \"1.313rem\",\n        maxWidth: \"500px\",\n        margin: \"10px auto 0\"\n    }\n}));\n\nexport default function NavigationComponent({ pages }) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n    const toggleDrawer = (anchor, open) => (event) => {\n        if(event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setState({ ...state, [anchor]: open});\n    };\n\n    const defaultHandler = () => {}; //No-Op\n\n    return (\n        <React.Fragment>\n            <AppBar position={'sticky'}>\n                <Toolbar>\n                    <IconButton onClick={toggleDrawer('left', true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        The Pragmatic Programmer\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer anchor='left' open={state['left']} onClose={toggleDrawer('left', false)}>\n                <Typography className={classes.navHeader} variant=\"h6\">The Pragmatic Developer</Typography>\n                <Divider />\n                <List>\n                    {pages.map((page, idx) => (\n                        <ListItem button key={page.name} onClick={page.clickHandler || defaultHandler}>\n                            <ListItemIcon>\n                              {page.icon || <ChevronRightIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={page.text || page.name} />\n                        </ListItem>\n                    ))};\n                </List>\n            </Drawer>\n        </React.Fragment>\n    );\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Typography, Divider, Button, Grid, Chip } from '@material-ui/core'\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: theme.spacing(0.5)\n  },\n  chip: {\n      margin: theme.spacing(0.5)\n  },\n    card: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n});\n\nfunction ParagraphComponent(props) {\n    return (\n        <Typography variant=\"body1\">{props.children}</Typography>\n    );\n}\n\nclass GithubIssue extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            issue_id: this.props.issue.number,\n            title: this.props.issue.title,\n            body: this.props.issue.body,\n            labels: this.props.issue.labels,\n            created_at: this.props.issue.created_at,\n            onClick: this.props.onClick\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    shouldComponentUpdate(previousState, nextState) {\n        return previousState.title !== nextState.title;\n    }\n\n    formatDate(date) {\n        let d = new Date(date),\n            month = \"\" + (d.getMonth() + 1),\n            day = \"\" + (d.getDay()),\n            year = \"\" + (d.getFullYear());\n        return [day, month, year].join('/');\n    }\n\n    render() {\n        const { classes } = this.props;\n        const renderers = {\n            paragraph: ParagraphComponent\n        }\n        let bodyArray = this.state.body.split(\"\\n\").filter(x => x.trim().length !== 0);\n        return (\n            <Card variant=\"outlined\" className={classes.card}>\n                <CardContent className={classes.root}>\n                    <Grid container spacing={1}>\n                        <Grid item xs={9}>\n                        {\n                            this.state.labels.map( (label, idx) => {\n                                console.log(label.color)\n                                return (<Chip key={idx} className={classes.chip} label={label.name} size=\"small\" variant=\"outlined\" style={{color:\"#\" + label.color, borderColor: \"#\" + label.color}} />);\n                            })\n                        }\n                        </Grid>\n                        <Grid item xs={12} md={9}>\n                            <Typography variant=\"h4\" display=\"block\">{this.state.title}</Typography>\n                        </Grid>\n                        <Grid item xs={12} md={9}>\n                            <Typography variant=\"subtitle1\" displaye=\"block\" align=\"right\">{this.formatDate(this.state.created_at)}</Typography>\n                        </Grid>\n                    </Grid>\n                    <ReactMarkdown source={bodyArray[0] || \"\"} renderers={renderers}/>\n                    <Divider />\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.state.onClick}>View</Button>\n                </CardContent>\n            </Card>\n            );\n    }\n}\n\nexport default withStyles(styles)(GithubIssue);\n","import React from \"react\";\nimport { Container, Typography, Grid, Paper, Chip, Divider, Box, List, ListItem, ListItemText } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport FiberManualRecordSharpIcon from '@material-ui/icons/FiberManualRecordSharp';\nimport { withRouter } from 'react-router'\nimport ReactMarkdown from 'react-markdown'\nimport parseLinkHeader from 'parse-link-header'\nimport Disqus from 'disqus-react'\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: theme.spacing(0.5)\n  },\n  chip: {\n      margin: theme.spacing(0.5)\n  },\n    card: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n});\n\nfunction formatDate(date) {\n    let d = new Date(date),\n        month = \"\" + (d.getMonth() + 1),\n        day = \"\" + (d.getDay()),\n        year = \"\" + (d.getFullYear());\n    return [day, month, year].join('/');\n}\n\nfunction HeadingComponent(props) {\n    return (\n        <React.Fragment>\n            <Box m={4}/>\n            <Typography variant=\"h4\">{props.children}</Typography>\n            <Divider />\n            <Box m={2}/>\n        </React.Fragment>\n    );\n}\n\nfunction ParagraphComponent(props) {\n    return (\n        <Typography variant={\"body1\"} component={\"div\"} paragraph={true}>{props.children}</Typography>\n\n    );\n}\n\nfunction ListComponent(props) {\n    return (\n            <List>\n                {props.children}\n            </List>\n    );\n}\n\nfunction ListItemComponent(props) {\n    return (\n            <ListItem>\n                <FiberManualRecordSharpIcon />\n                <ListItemText>{props.children}</ListItemText>\n            </ListItem>\n    );\n}\n\nfunction imgComponent(props) {\n    return (\n        <Grid container spacing={0} alignItems=\"center\" justify=\"center\">\n            <Grid item sm={12} md={9} style={{fontSize:0}}>\n                <Paper square={true} elevation={3}>\n                    <img {...props} style={{maxWidth: \"100%\", minWidth: \"100%\", margin:\"auto\", padding: 0}}/>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nfunction BreakComponent(props) {\n    return (\n        <Box m={3}/>\n    );\n}\n\nfunction CodeComponent(props) {\n    return (\n        <Paper style={{margin:20, padding:20}} variant=\"outlined\" elevation={2} >\n            <pre className=\"prettyprint\" style={{borderWidth: 0, overflow: \"auto\"}}>\n                <code className={props.language ? `language-${props.language}`: \"\"}>{props.value}</code>\n            </pre>\n        </Paper>\n    );\n}\n\nclass Post extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            issue_id: this.props.issue_id,\n            title: this.props.title,\n            body: this.props.body,\n            labels: this.props.labels || [],\n            created_at: this.props.created_at,\n            loaded: this.props.title && this.props.body && this.props.created_at\n        }\n        this.getIssue = this.getIssue.bind(this);\n    }\n\n    componentDidMount() {\n        if(!this.state.loaded) {\n            let issue_id = this.props.match.params.id;\n            this.setState({ issue_id: issue_id}, () => (\n                this.getIssue()\n            ))\n        }\n    }\n\n    getIssue() {\n        const headers = {\n            headers: {\n                Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n                Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n            }\n        };\n        const baseUrl = \"https://api.github.com/repos\"\n        let linkHeaders = ''\n        let userRepoIssue = `Heavyhat/the-pragmatic-developer/issues/${this.state.issue_id}`\n        let fullUrl = `${baseUrl}/${userRepoIssue}`\n        console.log(fullUrl)\n        fetch(fullUrl, headers)\n            .then(response => {\n                if (response.headers.get('Link')) {\n                    linkHeaders = parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                // set our state with the response\n                this.setState({\n                    title: data.title,\n                    body: data.body,\n                    labels: data.labels,\n                    created_at: data.created_at,\n                    loaded: true\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loaded: true,\n                    error: error\n                });\n            });\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const renderers = {\n            paragraph: ParagraphComponent,\n            code: CodeComponent,\n            heading: HeadingComponent,\n            break: BreakComponent,\n            list: ListComponent,\n            listItem: ListItemComponent,\n            image: imgComponent,\n            imageReference: imgComponent\n        }\n        let config ={\n            url: window.location.href,\n            identifier: this.state.issue_id,\n            title: this.props.title\n        }\n        return (\n            <Container style={{marginTop:120}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={9}>\n                            <Typography variant=\"h3\">{this.state.title}</Typography>\n                        </Grid>\n                        <Grid item xs={3} md={3}>\n                            <Typography variant=\"subtitle1\" align=\"right\">{formatDate(this.state.created_at)}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item xs={9}>\n                        {\n                            this.state.labels.map( (label, idx) => {\n                                console.log(label.color)\n                                return (<Chip key={idx} className={classes.chip} label={label.name} size=\"small\" variant=\"outlined\" style={{color:\"#\" + label.color, borderColor: \"#\" + label.color}} />);\n                            })\n                        }\n                        </Grid>\n                        <Grid item xs={12}>\n                            <ReactMarkdown source={this.state.body} renderers={renderers}></ReactMarkdown>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Disqus.DiscussionEmbed shortname=\"the-pragmatic-programmer\" config={config} />\n                        </Grid>\n                    </Grid>\n                </Container>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles)(Post));\n","import React from 'react';\nimport parseLinkHeader from 'parse-link-header'\nimport GithubIssue from 'components/GithubIssue/GithubIssue'\nimport Post from 'components/Post/Post'\nimport { Pagination, Skeleton } from '@material-ui/lab'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Card, CardContent, Grid, Typography, Divider } from '@material-ui/core'\nimport { withRouter } from 'react-router-dom'\n\n\nconst styles = (theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    margin: theme.spacing(0.5)\n  },\n  chip: {\n      margin: theme.spacing(0.5)\n  },\n    card: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(5)\n    }\n});\n\n\nconst encodeParameters = (obj) => {\n    return Object.entries(obj).map(kv => kv.map(encodeURIComponent).join('=')).join('&')\n}\n\nconst getRand = (min, max) => {\n    let range = max - min;\n    range = Math.floor(Math.random() * range);\n    return min + range;\n}\n\n\n/**\n *\n *\n * @class GithubIssues\n * @extends {React.Component}\n */\nclass GithubIssues extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: this.props.history,\n            user: this.props.user,\n            repo: this.props.repo,\n            listFilter: { state: \"open\", choice: \"issues\" },\n            since: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n            per_page: this.props.per_page || 2,\n            number: 0,\n            sort: \"created\",\n            page: 1,\n            pages: {},\n            issues: [],\n            loading: true,\n            error: null,\n            showBody: {},\n            loadedPost: this.props.match.params.id ? { issue_id: this.props.match.params.id } : null\n        };\n\n        // fix the this value\n        this.getIssues = this.getIssues.bind(this);\n        this.loadPost = this.loadPost.bind(this);\n        this.renderPost = this.renderPost.bind(this);\n        this.renderIssues = this.renderIssues.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        //this.handleFilterChange = this.handleFilterChange.bind(this);\n\n    }\n\n    componentDidMount() {\n         // Get the issues and populate the panel\n        this.getIssues();\n    }\n\n\n    shouldComponentUpdate(previousState, nextState) {\n        if (previousState.page !== nextState.page) {\n            return true;\n        }\n        if (previousState.listFilter !== nextState.listFilter) {\n            return true;\n        }\n        if (previousState.loadedPost !== nextState.loadedPost) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Fetch issues for repository\n     */\n    getIssues() {\n\n        // Use auth token with Github API in order to have a higher rate limit for this example - not recommended for client-side use in production\n        const headers = {\n            headers: {\n                Authorization: \"token 60e07ff280c786e523a632be9af8f992270a5c5b\",\n                Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n            }\n        };\n\n        const baseUrl = \"https://api.github.com/repos\"\n\n        // 7 days ago from today in ISO - to be used for GH API parameter\n        // included as a state variable because I will add a datepicker in the future for custom time frame\n\n        // GET parameters to send to GH Issues API\n        // `this.state.listFilter.state` - this is ~confusing because GH refers to\n        // 'open, closed' as 'state' of an issue/PR\n        // I am calling open/close/all 'state' and issue/pr/all 'choice'\n        const params = encodeParameters({ state: this.state.listFilter.state, per_page: this.state.per_page, page: this.state.page, sort: \"created\" })\n\n        // Need an empty string to store Link headers from GET response since we need to reference it within promise chain - used for pagination\n        let linkHeaders = ''\n\n        let userRepo = `${baseUrl}/${this.state.user}/${this.state.repo}`\n        // Build the URL from props/state(for the page) - [note: when state.page changes, we update]\n        let userRepoIssues = `${this.state.user}/${this.state.repo}/issues`\n        fetch(userRepo, headers)\n            .then(response => {\n                if (response.ok) {\n                    console.log(response)\n                    return response.json();\n                }\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                console.log(data)\n                this.setState({\n                    number: data.open_issues_count\n                })\n            })\n\n        let fullUrl = `${baseUrl}/${userRepoIssues}?${params}`\n        fetch(`https://api.github.com/rate_limit`, headers)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n            })\n            .then(data => {\n                console.log(data)\n            })\n        fetch(fullUrl, headers)\n            .then(response => {\n                // If we have Link headers, parse them in to an object to store via appHelpers.parseLinkHeaders\n                if (response.headers.get('Link')) {\n                    linkHeaders = parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) {\n                    console.log(response)\n                    return response.json();\n                }\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                console.log(data);\n                // set our state with the response\n                this.setState({\n                    pages: linkHeaders,\n                    issues: data,\n                    loading: false,\n                    error: null,\n                    showBody: {},\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false,\n                    error: error\n                });\n            });\n    }\n\n    // Render a loading bar during HTTP Request\n    renderLoading() {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                {\n                    [...Array(this.state.per_page).keys()].map((x) => {\n                        return (\n                            <Card key={x} variant=\"outlined\" className={classes.card}>\n                                <CardContent className={classes.root}>\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={9}>\n\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            <Typography variant=\"subtitle1\" displaye=\"block\" align=\"right\"><Skeleton animation=\"wave\"/></Typography>\n                                        </Grid>\n                                    </Grid>\n                                    <Typography variant=\"h4\" display=\"block\"><Skeleton animation=\"wave\" width={240} /></Typography>\n                                    <Typography variant=\"body1\" display=\"block\"><Skeleton animation=\"wave\" /></Typography>\n                                    <Typography variant=\"body1\" display=\"block\"><Skeleton animation=\"wave\" /></Typography>\n                                    <Typography variant=\"body1\" display=\"block\"><Skeleton animation=\"wave\" width={getRand(64,400)}/></Typography>\n                                    <Divider />\n                                    <Skeleton animation=\"wave\" width={64} height={44}/>\n                                </CardContent>\n                            </Card>\n                        );\n                    })\n                }\n            </React.Fragment>\n        );\n    }\n\n    // Render an error message\n    renderError() {\n        return (\n            <div>\n                Uh oh: {this.state.error.message}\n            </div>\n        );\n    }\n\n\n     // expects a URL parameter like the end of pagination url - i.e '&page=2'\n    handlePageChange(event, value) {\n        this.setState({page: value, loading: true}, () => {\n            this.getIssues()\n        })\n    }\n\n    renderPost() {\n        if(this.props.location.pathname.includes('post'))\n            return (<Post issue_id={this.state.loadedPost.issue_id} title={this.state.loadedPost.title} body={this.state.loadedPost.body} labels={this.state.loadedPost.labels} created_at={this.state.loadedPost.created_at}/>)\n        else if(this.state.loadedPost)\n            this.setState({loadedPost: null})\n        console.log(\"Rendering post\")\n        return (<React.Fragment/>);\n    }\n\n    loadPost(issue) {\n        this.props.history.push(`/the-pragmatic-programmer/post/${issue.number}`)\n        this.setState({\n            loadedPost: issue\n        })\n    }\n\n    // Renders the panel blocks that contain the issue information\n    renderIssues() {\n        if (this.state.error) {\n            return this.renderError();\n        }\n\n        return (\n            < React.Fragment >\n                {\n                    this.state.issues.map( (data, index) => {\n                        return (<GithubIssue key={index} issue={data} onClick={() => this.loadPost(data)}></GithubIssue>)\n                    })\n                }\n                <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n                    <Grid item xs={12} md={6}>\n                        <Pagination style={{\n                            margin: 'auto'\n                        }}  count={Math.ceil(this.state.number / this.state.per_page)} page={this.state.page} onChange={this.handlePageChange} showFirstButton showLastButton />\n                    </Grid>\n                </Grid>\n            </ React.Fragment>\n        );\n    }\n\n    render() {\n            return (\n                <React.Fragment>\n                    {\n                        this.state.loading ?\n                    this.renderLoading()\n                    :  this.state.loadedPost ? this.renderPost() : this.renderIssues()}\n                </React.Fragment>\n            );\n    }\n}\nexport default withRouter(withStyles(styles)(GithubIssues));\n","import React from \"react\";\n// @material-ui/core components\nimport { Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport GithubIssues from \"components/GithubIssues/GithubIssues\";\n\n// @material-ui/icons\n\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrox: \"1\"\n    },\n    jumbotron: {\n      display: \"block\",\n      width: \"100%\",\n      height: \"300px\",\n      zIndex: \"-1\",\n      backgroundColor: \"#222222\"\n    },\n    main: {\n      background: \"#FFFFFF\",\n      position: \"relative\",\n      zIndex: \"3\"\n    },\n    mainRaised: {\n      margin: \"-60px 30px 0px\",\n      borderRadius: \"6px\",\n      boxShadow:\n        \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n})\n\n\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Container>\n            <GithubIssues user=\"Heavyhat\" repo=\"the-pragmatic-programmer\" />\n        </Container>\n      </div>\n  );\n}\n","import React from \"react\";\n// @material-ui/core components\nimport { Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport GithubIssues from \"components/GithubIssues/GithubIssues\";\n\n// @material-ui/icons\n\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrox: \"1\"\n    },\n    jumbotron: {\n      display: \"block\",\n      width: \"100%\",\n      height: \"300px\",\n      zIndex: \"-1\",\n      backgroundColor: \"#222222\"\n    },\n    main: {\n      background: \"#FFFFFF\",\n      position: \"relative\",\n      zIndex: \"3\"\n    },\n    mainRaised: {\n      margin: \"-60px 30px 0px\",\n      borderRadius: \"6px\",\n      boxShadow:\n        \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n})\n\n\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Container>\n            <GithubIssues user=\"Heavyhat\" repo=\"the-pragmatic-developer\" />\n        </Container>\n      </div>\n  );\n}\n","import React from \"react\";\n// nodejs library that concatenates classes\n// @material-ui/core components\nimport { Container, Typography, Card, CardContent, Divider, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// @material-ui/icons\nlet styles = makeStyles(theme => (\n    {\n        root: {\n            margin: theme.spacing(5)\n        }\n    }\n))\n\n\n\nexport default function AuthorPage(props) {\n  const classes = styles();\n  return (\n      <Container style={{marginTop: 50}}>\n            <Card>\n                <CardContent className={classes.root}>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h4\">The Author</Typography>\n                            <Divider/>\n                        </Grid>\n                        <Grid item xs={12} lg={8}>\n                            <Typography variant=\"body1\" paragraph={true}>Hi! My name is Josh.</Typography>\n\n                            <Typography variant=\"body1\" paragrapgh={true}>Thanks for having a look around and let me know if theres anything in partiocular you would like to see in the future.</Typography>\n\n                            <Typography variant=\"body1\" paragraph={true}>I have been working in the software development industry for {new Date().getFullYear() - 2015} years, working primarily in the financial services sector. This sector typically comes with a poor reputation and its own unique challenges which I love to see and solve. Having worked at a number of different firms I have observed a number of styfling issues which keep repeating themselves across the world. So I thought I would write about it! I'm not aiming to change much or to educate anyone but I hope to understand these issues in a more granular detail by articulating their intricacies into a blog like format.</Typography>\n\n                            <Typography variant=\"body1\" paragraph={true}>I don't identify as part of a particular sect of software development as In think these boundaries are detrimental to the profession as a whole. So throughout my brief career I have immessered myself in a number of langueges, techniques and sub fields which I hope I can draw from in the future and I aim to share with you.\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Container>\n  );\n}\n","import React from \"react\";\n// @material-ui/core components\nimport { Container} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport GithubIssues from \"components/GithubIssues/GithubIssues\";\n\n// @material-ui/icons\n\n\nconst useStyles = makeStyles({\n    root: {\n        padding: \"0px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrox: \"1\"\n    },\n    jumbotron: {\n      display: \"block\",\n      width: \"100%\",\n      height: \"300px\",\n      zIndex: \"-1\",\n      backgroundColor: \"#222222\"\n    },\n    main: {\n      background: \"#FFFFFF\",\n      position: \"relative\",\n      zIndex: \"3\"\n    },\n    mainRaised: {\n      margin: \"-60px 30px 0px\",\n      borderRadius: \"6px\",\n      boxShadow:\n        \"0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n})\n\n\n\nexport default function LandingPage(props) {\n  const classes = useStyles();\n  return (\n      <div className={classes.root}>\n        <Container>\n            <GithubIssues user=\"Heavyhat\" repo=\"the-pragmatic-developer\" />\n        </Container>\n      </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom'\nimport NavigationComponent from 'components/NavigationComponent/NavigationComponent.js'\n\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport AboutPage from \"./views/AboutPage/AboutPage.js\";\nimport AuthorPage from \"./views/AuthorPage/AuthorPage.js\";\nimport ContactPage from \"./views/ContactPage/ContactPage.js\";\n\nvar hist = createBrowserHistory();\n\nconst goToWeekly = () => {\n  hist.push(\"/the-pragmatic-programmer\")\n};\nconst goToAbout = () => {\n  hist.push(\"/the-pragmatic-programmer/about\");\n};\nconst goToAuthor = () => {\n  console.log(\"goind to author\")\n  hist.push(\"/the-pragmatic-programmer/author\");\n};\nconst goToContact = () => {\n  hist.push(\"/the-pragmatic-programmer/contact\");\n};\nconst pagesConfig= [\n    { name: \"Weekly\", clickHandler: goToWeekly },\n    { name: \"About\", clickHandler: goToAbout },\n    { name: \"The Author\", clickHandler: goToAuthor },\n    { name: \"Contact\", clickHandler: goToContact}\n];\n\nReactDOM.render(\n  <React.Fragment>\n    <NavigationComponent pages={pagesConfig} />\n    <Router history={hist}>\n      <Switch>\n        <Route exact path=\"/the-pragmatic-programmer\" component={LandingPage} />\n        <Route path=\"/the-pragmatic-programmer/post/:id\" component={LandingPage} />\n        <Route path=\"/the-pragmatic-programmer/author\" component={AuthorPage} />\n      </Switch>\n    </Router>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}